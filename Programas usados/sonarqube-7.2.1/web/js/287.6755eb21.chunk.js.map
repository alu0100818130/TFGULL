{"version":3,"sources":["webpack:///./src/main/js/apps/organizations/components/OrganizationDelete.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/api/user_groups.ts","webpack:///./src/main/js/apps/organizations/actions.js","webpack:///./src/main/js/components/controls/ConfirmButton.tsx"],"names":["OrganizationDelete","_super","_this","apply","this","arguments","mounted","state","fetchOrganizationPlanInfo","Object","_helpers_system__WEBPACK_IMPORTED_MODULE_10__","_api_organizations__WEBPACK_IMPORTED_MODULE_9__","props","organization","key","then","billingInfo","setState","hasPaidPlan","subscription","status","onDelete","deleteOrganization","context","router","replace","__extends","prototype","componentDidMount","componentWillUnmount","render","title","_helpers_l10n__WEBPACK_IMPORTED_MODULE_6__","react__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","className","_components_common_InstanceMessage__WEBPACK_IMPORTED_MODULE_5__","message","_components_controls_ConfirmButton__WEBPACK_IMPORTED_MODULE_4__","confirmButtonText","isDestructive","modalBody","modalHeader","onConfirm","_a","onClick","_components_ui_buttons__WEBPACK_IMPORTED_MODULE_8__","contextTypes","prop_types__WEBPACK_IMPORTED_MODULE_1__","mapDispatchToProps","_actions__WEBPACK_IMPORTED_MODULE_7__","__webpack_exports__","react_redux__WEBPACK_IMPORTED_MODULE_3__","SimpleModal","submitting","stopSubmitting","handleCloseClick","event","preventDefault","currentTarget","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","onSubmit","_components_controls_Modal__WEBPACK_IMPORTED_MODULE_1__","contentLabel","header","onRequestClose","children","onCloseClick","onFormSubmit","onSubmitClick","ModalButton","modal","handleButtonClick","handleCloseModal","ConfirmModal","handleSubmit","confirmData","renderModalContent","_b","confirmDisable","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","loading","_ui_buttons__WEBPACK_IMPORTED_MODULE_4__","autoFocus","undefined","disabled","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","searchUsersGroups","data","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","getUsersInGroup","addUserToGroup","removeUserFromGroup","createGroup","r","group","updateGroup","deleteGroup","fetchOrganization","dispatch","Promise","all","_api_organizations__WEBPACK_IMPORTED_MODULE_0__","navigation","organizationWithPermissions","__assign","_store_organizations_duck__WEBPACK_IMPORTED_MODULE_1__","_store_rootActions__WEBPACK_IMPORTED_MODULE_5__","fetchOrganizationGroups","_api_user_groups__WEBPACK_IMPORTED_MODULE_3__","response","groups","createOrganization","fields","_store_globalMessages_duck__WEBPACK_IMPORTED_MODULE_7__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_8__","name","error","reject","onRejected","updateOrganization","changes","fetchMembers","receiveAction","query","page","_store_organizationsMembers_actions__WEBPACK_IMPORTED_MODULE_2__","ps","p","q","users","total","paging","pageIndex","onMembersFail","fetchOrganizationMembers","fetchMoreOrganizationMembers","getState","_store_rootReducer__WEBPACK_IMPORTED_MODULE_6__","addOrganizationMember","member","login","user","removeOrganizationMember","updateOrganizationMemberGroups","add","remove","_store_users_actions__WEBPACK_IMPORTED_MODULE_4__","groupCount","length","promises","map","concat","ConfirmButton","renderConfirmModal","_ConfirmModal__WEBPACK_IMPORTED_MODULE_2__","_ModalButton__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"js/287.6755eb21.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport ConfirmButton from '../../../components/controls/ConfirmButton';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\nimport { translate } from '../../../helpers/l10n';\nimport { deleteOrganization } from '../actions';\nimport { Organization } from '../../../app/types';\nimport { Button } from '../../../components/ui/buttons';\nimport { getOrganizationBilling } from '../../../api/organizations';\nimport { isSonarCloud } from '../../../helpers/system';\n\ninterface DispatchToProps {\n  deleteOrganization: (key: string) => Promise<void>;\n}\n\ninterface OwnProps {\n  organization: Pick<Organization, 'key' | 'name'>;\n}\n\ntype Props = OwnProps & DispatchToProps;\n\ninterface State {\n  hasPaidPlan?: boolean;\n}\n\nexport class OrganizationDelete extends React.PureComponent<Props, State> {\n  mounted = false;\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchOrganizationPlanInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchOrganizationPlanInfo = () => {\n    if (isSonarCloud()) {\n      getOrganizationBilling(this.props.organization.key).then(\n        billingInfo => {\n          if (this.mounted) {\n            this.setState({\n              hasPaidPlan: billingInfo.subscription.status !== 'inactive'\n            });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ hasPaidPlan: false });\n          }\n        }\n      );\n    }\n  };\n\n  onDelete = () => {\n    return this.props.deleteOrganization(this.props.organization.key).then(() => {\n      this.context.router.replace('/');\n    });\n  };\n\n  render() {\n    const { hasPaidPlan } = this.state;\n    const title = translate('organization.delete');\n    return (\n      <>\n        <Helmet title={title} />\n        <div className=\"page page-limited\">\n          <header className=\"page-header\">\n            <h1 className=\"page-title\">{title}</h1>\n            <div className=\"page-description\">\n              <InstanceMessage message={translate('organization.delete.description')} />\n            </div>\n          </header>\n          <ConfirmButton\n            confirmButtonText={translate('delete')}\n            isDestructive={true}\n            modalBody={\n              <div>\n                {translate('organization.delete.question')}\n                {hasPaidPlan && (\n                  <p className=\"alert alert-warn big-spacer-top\">\n                    {translate('organization.delete.sonarcloud.paid_plan_info')}\n                  </p>\n                )}\n              </div>\n            }\n            modalHeader={translate('organization.delete')}\n            onConfirm={this.onDelete}>\n            {({ onClick }) => (\n              <Button className=\"js-custom-measure-delete button-red\" onClick={onClick}>\n                {translate('delete')}\n              </Button>\n            )}\n          </ConfirmButton>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps: DispatchToProps = { deleteOrganization: deleteOrganization as any };\n\nexport default connect<null, DispatchToProps, OwnProps>(null, mapDispatchToProps)(\n  OrganizationDelete\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from '../../components/controls/Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    return (\n      <Modal contentLabel={this.props.header} onRequestClose={this.props.onClose}>\n        {this.props.children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { translate } from '../../helpers/l10n';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\n\ninterface Props<T> {\n  children: React.ReactNode;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  header: string;\n  isDestructive?: boolean;\n  onClose: () => void;\n  onConfirm: (data?: T) => void | Promise<void>;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const { children, confirmButtonText, confirmDisable, header, isDestructive } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {translate('cancel')}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header } = this.props;\n    return (\n      <SimpleModal header={header} onClose={this.props.onClose} onSubmit={this.handleSubmit}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from '../helpers/request';\nimport { Paging, Group } from '../app/types';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function searchUsersGroups(data: {\n  f?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n}): Promise<{ groups: Group[]; paging: Paging }> {\n  return getJSON('/api/user_groups/search', data).catch(throwGlobalError);\n}\n\nexport interface GroupUser {\n  login: string;\n  name: string;\n  selected: boolean;\n}\n\nexport function getUsersInGroup(data: {\n  id?: number;\n  name?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n  selected?: string;\n}): Promise<{ paging: Paging; users: GroupUser[] }> {\n  return getJSON('/api/user_groups/users', data).catch(throwGlobalError);\n}\n\nexport function addUserToGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/add_user', data).catch(throwGlobalError);\n}\n\nexport function removeUserFromGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/remove_user', data).catch(throwGlobalError);\n}\n\nexport function createGroup(data: {\n  description?: string;\n  organization: string | undefined;\n  name: string;\n}): Promise<Group> {\n  return postJSON('/api/user_groups/create', data).then(r => r.group, throwGlobalError);\n}\n\nexport function updateGroup(data: { description?: string; id: number; name?: string }) {\n  return post('/api/user_groups/update', data).catch(throwGlobalError);\n}\n\nexport function deleteGroup(data: { name: string; organization: string | undefined }) {\n  return post('/api/user_groups/delete', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport * as api from '../../api/organizations';\nimport * as actions from '../../store/organizations/duck';\nimport * as membersActions from '../../store/organizationsMembers/actions';\nimport { searchUsersGroups, addUserToGroup, removeUserFromGroup } from '../../api/user_groups';\nimport { receiveUser } from '../../store/users/actions';\nimport { onFail } from '../../store/rootActions';\nimport { getOrganizationMembersState } from '../../store/rootReducer';\nimport { addGlobalSuccessMessage } from '../../store/globalMessages/duck';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\n/*:: import type { Organization } from '../../store/organizations/duck'; */\n/*:: import type { Member } from '../../store/organizationsMembers/actions'; */\n\nconst PAGE_SIZE = 50;\n\nconst onRejected = (dispatch /*: Function */) => (error /*: Object */) => {\n  onFail(dispatch)(error);\n  return Promise.reject();\n};\n\nconst onMembersFail = (organization /*: string */, dispatch /*: Function */) => (\n  error /*: Object */\n) => {\n  onFail(dispatch)(error);\n  dispatch(membersActions.updateState(organization, { loading: false }));\n};\n\nexport const fetchOrganization = (key /*: string */) => (dispatch /*: Function */) => {\n  const onFulfilled = ([organization, navigation]) => {\n    if (organization) {\n      const organizationWithPermissions = { ...organization, ...navigation };\n      dispatch(actions.receiveOrganizations([organizationWithPermissions]));\n    }\n  };\n\n  return Promise.all([api.getOrganization(key), api.getOrganizationNavigation(key)]).then(\n    onFulfilled,\n    onFail(dispatch)\n  );\n};\n\nexport const fetchOrganizationGroups = (organization /*: string */) => (\n  dispatch /*: Function */\n) => {\n  return searchUsersGroups({ organization }).then(response => {\n    dispatch(actions.receiveOrganizationGroups(organization, response.groups));\n  }, onFail(dispatch));\n};\n\nexport const createOrganization = (fields /*: Object */) => (dispatch /*: Function */) => {\n  const onFulfilled = (organization /*: Organization */) => {\n    dispatch(actions.createOrganization(organization));\n    dispatch(\n      addGlobalSuccessMessage(translateWithParameters('organization.created', organization.name))\n    );\n    return organization;\n  };\n\n  return api.createOrganization(fields).then(onFulfilled, onRejected(dispatch));\n};\n\nexport const updateOrganization = (key /*: string */, changes /*: {} */) => (\n  dispatch /*: Function */\n) => {\n  const onFulfilled = () => {\n    dispatch(actions.updateOrganization(key, changes));\n    dispatch(addGlobalSuccessMessage(translate('organization.updated')));\n  };\n\n  return api.updateOrganization(key, changes).then(onFulfilled, onFail(dispatch));\n};\n\nexport const deleteOrganization = (key /*: string */) => (dispatch /*: Function */) => {\n  const onFulfilled = () => {\n    dispatch(actions.deleteOrganization(key));\n    dispatch(addGlobalSuccessMessage(translate('organization.deleted')));\n  };\n\n  return api.deleteOrganization(key).then(onFulfilled, onFail(dispatch));\n};\n\nconst fetchMembers = (\n  dispatch /*: Function */,\n  receiveAction /*: Function */,\n  key /*: string */,\n  query /*: ?string */,\n  page /*: ?number */\n) => {\n  dispatch(membersActions.updateState(key, { loading: true }));\n  const data /*: Object */ = {\n    organization: key,\n    ps: PAGE_SIZE\n  };\n  if (page != null) {\n    data.p = page;\n  }\n  if (query) {\n    data.q = query;\n  }\n  return api.searchMembers(data).then(response => {\n    dispatch(\n      receiveAction(key, response.users, {\n        loading: false,\n        total: response.paging.total,\n        pageIndex: response.paging.pageIndex,\n        query: query || null\n      })\n    );\n  }, onMembersFail(key, dispatch));\n};\n\nexport const fetchOrganizationMembers = (key /*: string */, query /*: ?string */) => (\n  dispatch /*: Function */\n) => fetchMembers(dispatch, membersActions.receiveMembers, key, query);\n\nexport const fetchMoreOrganizationMembers = (key /*: string */, query /*: ?string */) => (\n  dispatch /*: Function */,\n  getState /*: Function */\n) =>\n  fetchMembers(\n    dispatch,\n    membersActions.receiveMoreMembers,\n    key,\n    query,\n    getOrganizationMembersState(getState(), key).pageIndex + 1\n  );\n\nexport const addOrganizationMember = (key /*: string */, member /*: Member */) => (\n  dispatch /*: Function */\n) => {\n  return api\n    .addMember({ login: member.login, organization: key })\n    .then(user => dispatch(membersActions.addMember(key, user)), onFail(dispatch));\n};\n\nexport const removeOrganizationMember = (key /*: string */, member /*: Member */) => (\n  dispatch /*: Function */\n) => {\n  dispatch(membersActions.removeMember(key, member));\n  return api.removeMember({ login: member.login, organization: key }).catch((\n    error /*: Object */\n  ) => {\n    onFail(dispatch)(error);\n    dispatch(membersActions.addMember(key, member));\n  });\n};\n\nexport const updateOrganizationMemberGroups = (\n  organization /*: Organization */,\n  member /*: Member */,\n  add /*: Array<string> */,\n  remove /*: Array<string> */\n) => (dispatch /*: Function */) => {\n  dispatch(\n    receiveUser({\n      ...member,\n      groupCount: (member.groupCount || 0) + add.length - remove.length\n    })\n  );\n  const promises = [\n    ...add.map(name =>\n      addUserToGroup({ name, login: member.login, organization: organization.key })\n    ),\n    ...remove.map(name =>\n      removeUserFromGroup({ name, login: member.login, organization: organization.key })\n    )\n  ];\n  return Promise.all(promises).catch(error => {\n    dispatch(receiveUser(member));\n    onFail(dispatch)(error);\n  });\n};\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\nimport ConfirmModal from './ConfirmModal';\n\nexport { ChildrenProps } from './ModalButton';\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  confirmButtonText: string;\n  confirmData?: string;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  onConfirm: (data?: string) => void | Promise<void>;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton extends React.PureComponent<Props, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    return (\n      <ConfirmModal\n        confirmButtonText={this.props.confirmButtonText}\n        confirmData={this.props.confirmData}\n        confirmDisable={this.props.confirmDisable}\n        header={this.props.modalHeader}\n        isDestructive={this.props.isDestructive}\n        onClose={onClose}\n        onConfirm={this.props.onConfirm}>\n        {this.props.modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n"],"sourceRoot":""}