{"version":3,"sources":["webpack:///./src/main/js/apps/projectQualityGate/Header.tsx","webpack:///./src/main/js/apps/projectQualityGate/Form.tsx","webpack:///./src/main/js/apps/projectQualityGate/App.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/docs/DocTooltip.tsx","webpack:///../sonar-docs/src/tooltips lazy ^\\.\\/.*\\.md$ namespace object","webpack:///./src/main/js/api/quality-gates.ts","webpack:///./src/main/js/app/utils/handleRequiredAuthorization.js"],"names":["Header","index_js_exposed","className","Object","l10n","DocTooltip","doc","_super","Form","_this","apply","this","arguments","mounted","state","loading","stopLoading","setState","handleChange","option","gate","props","isSet","value","isUnset","isChanged","id","Number","onChange","then","renderGateName","isDefault","label","__extends","prototype","componentDidMount","componentWillUnmount","renderSelect","_a","options","allGates","map","String","name","Select","clearable","disabled","optionRenderer","style","width","valueRenderer","render","App_App","App","handleChangeGate","oldId","newId","Promise","resolve","component","requestData","gateId","organization","projectKey","key","quality_gates","addGlobalSuccessMessage","newGate","find","onComponentChange","qualityGate","undefined","App_extends","checkPermissions","fetchQualityGates","handleRequiredAuthorization","configuration","showQualityGates","all","project","qualitygates","Suggestions","suggestions","Helmet_default","a","title","projectQualityGate_Form","context","addSuggestions","componentDidUpdate","prevProps","removeSuggestions","contextTypes","prop_types__WEBPACK_IMPORTED_MODULE_1__","isRequired","react__WEBPACK_IMPORTED_MODULE_0__","DocMarkdownBlock","_lazyLoad__WEBPACK_IMPORTED_MODULE_2__","__webpack_require__","e","bind","open","fetchContent","content","default","close","document","addEventListener","componentWillReceiveProps","nextProps","removeEventListener","renderOverlay","isTooltip","_controls_HelpTooltip__WEBPACK_IMPORTED_MODULE_1__","onShow","overlay","children","./branches/no-branch-support.md","./branches/single-branch.md","./editions/datacenter.md","./editions/developer.md","./editions/enterprise.md","./organizations/add-organization-member.md","./organizations/organization.md","./quality-gates/built-in-quality-gate.md","./quality-gates/default-quality-gate.md","./quality-gates/project-homepage-quality-gate.md","./quality-gates/quality-gate-conditions.md","./quality-gates/quality-gate-projects.md","./quality-gates/quality-gate.md","./quality-profiles/built-in-quality-profile.md","./quality-profiles/default-quality-profile.md","./quality-profiles/quality-profile-projects.md","./rules/custom-rule-removal.md","./rules/custom-rules.md","./rules/rule-templates.md","./rules/rules-quality-profiles.md","webpackAsyncContext","req","ids","module","__esModule","assign","Error","code","keys","exports","data","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","fetchQualityGate","createQualityGate","deleteQualityGate","renameQualityGate","copyQualityGate","setQualityGateAsDefault","createCondition","updateCondition","deleteCondition","getGateForProject","__assign","searchGates","associateGateWithProject","dissociateGateWithProject","getApplicationQualityGate","__webpack_exports__","store","_getStore__WEBPACK_IMPORTED_MODULE_0__","history","_getHistory__WEBPACK_IMPORTED_MODULE_1__","returnTo","window","location","pathname","search","hash","dispatch","_store_appState_duck__WEBPACK_IMPORTED_MODULE_2__","replace","query","return_to"],"mappings":"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","file":"js/296.d3095b82.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DocTooltip from '../../components/docs/DocTooltip';\nimport { translate } from '../../helpers/l10n';\n\nexport default function Header() {\n  return (\n    <header className=\"page-header\">\n      <div className=\"page-title display-flex-center\">\n        <h1>{translate('project_quality_gate.page')}</h1>\n        <DocTooltip className=\"spacer-left\" doc=\"quality-gates/quality-gate-projects\" />\n      </div>\n      <div className=\"page-description\">{translate('project_quality_gate.page.description')}</div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from '../../components/controls/Select';\nimport { translate } from '../../helpers/l10n';\nimport { QualityGate } from '../../app/types';\n\ninterface Props {\n  allGates: QualityGate[];\n  gate?: QualityGate;\n  onChange: (oldGate?: number, newGate?: number) => Promise<void>;\n}\n\ninterface State {\n  loading: boolean;\n}\n\ninterface Option {\n  isDefault?: boolean;\n  label: string;\n  value: string;\n}\n\nexport default class Form extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  handleChange = (option: { value: string }) => {\n    const { gate } = this.props;\n\n    const isSet = gate == null && option.value != null;\n    const isUnset = gate != null && option.value == null;\n    const isChanged = gate != null && gate.id !== Number(option.value);\n    const hasChanged = isSet || isUnset || isChanged;\n\n    if (hasChanged) {\n      this.setState({ loading: true });\n      this.props\n        .onChange(gate && gate.id, Number(option.value))\n        .then(this.stopLoading, this.stopLoading);\n    }\n  };\n\n  renderGateName = (option: { isDefault?: boolean; label: string }) => {\n    if (option.isDefault) {\n      return (\n        <span>\n          <strong>{translate('default')}</strong>\n          {': '}\n          {option.label}\n        </span>\n      );\n    }\n\n    return <span>{option.label}</span>;\n  };\n\n  renderSelect() {\n    const { gate, allGates } = this.props;\n\n    const options: Option[] = allGates.map(gate => ({\n      value: String(gate.id),\n      label: gate.name,\n      isDefault: gate.isDefault\n    }));\n\n    return (\n      <Select\n        clearable={false}\n        disabled={this.state.loading}\n        onChange={this.handleChange}\n        optionRenderer={this.renderGateName}\n        options={options}\n        style={{ width: 300 }}\n        value={gate && String(gate.id)}\n        valueRenderer={this.renderGateName}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderSelect()}\n        {this.state.loading && <i className=\"spinner spacer-left\" />}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport Header from './Header';\nimport Form from './Form';\nimport {\n  fetchQualityGates,\n  getGateForProject,\n  associateGateWithProject,\n  dissociateGateWithProject\n} from '../../api/quality-gates';\nimport Suggestions from '../../app/components/embed-docs-modal/Suggestions';\nimport addGlobalSuccessMessage from '../../app/utils/addGlobalSuccessMessage';\nimport handleRequiredAuthorization from '../../app/utils/handleRequiredAuthorization';\nimport { Component, QualityGate } from '../../app/types';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  component: Component;\n  onComponentChange: (changes: {}) => void;\n}\n\ninterface State {\n  allGates?: QualityGate[];\n  gate?: QualityGate;\n  loading: boolean;\n}\n\nexport default class App extends React.PureComponent<Props> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.checkPermissions()) {\n      this.fetchQualityGates();\n    } else {\n      handleRequiredAuthorization();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkPermissions() {\n    const { configuration } = this.props.component;\n    const hasPermission = configuration && configuration.showQualityGates;\n    return !!hasPermission;\n  }\n\n  fetchQualityGates() {\n    const { component } = this.props;\n    this.setState({ loading: true });\n    Promise.all([\n      fetchQualityGates({ organization: component.organization }),\n      getGateForProject({ organization: component.organization, project: component.key })\n    ]).then(\n      ([{ qualitygates: allGates }, gate]) => {\n        if (this.mounted) {\n          this.setState({ allGates, gate, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleChangeGate = (oldId?: number, newId?: number) => {\n    const { allGates } = this.state;\n    if ((!oldId && !newId) || !allGates) {\n      return Promise.resolve();\n    }\n\n    const { component } = this.props;\n    const requestData = {\n      gateId: newId ? newId : oldId!,\n      organization: component.organization,\n      projectKey: component.key\n    };\n    const request = newId\n      ? associateGateWithProject(requestData)\n      : dissociateGateWithProject(requestData);\n\n    return request.then(() => {\n      if (this.mounted) {\n        addGlobalSuccessMessage(translate('project_quality_gate.successfully_updated'));\n        if (newId) {\n          const newGate = allGates.find(gate => gate.id === newId);\n          if (newGate) {\n            this.setState({ gate: newGate });\n            this.props.onComponentChange({ qualityGate: newGate });\n          }\n        } else {\n          this.setState({ gate: undefined });\n        }\n      }\n    });\n  };\n\n  render() {\n    if (!this.checkPermissions()) {\n      return null;\n    }\n\n    const { allGates, gate, loading } = this.state;\n\n    return (\n      <div className=\"page page-limited\" id=\"project-quality-gate\">\n        <Suggestions suggestions=\"project_quality_gate\" />\n        <Helmet title={translate('project_quality_gate.page')} />\n        <Header />\n        {loading ? (\n          <i className=\"spinner\" />\n        ) : (\n          allGates && <Form allGates={allGates} gate={gate} onChange={this.handleChangeGate} />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default class Suggestions extends React.PureComponent<Props> {\n  context!: { suggestions: SuggestionsContext };\n\n  static contextTypes = {\n    suggestions: PropTypes.object.isRequired\n  };\n\n  componentDidMount() {\n    this.context.suggestions.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.context.suggestions.removeSuggestions(this.props.suggestions);\n      this.context.suggestions.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.context.suggestions.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from '../controls/HelpTooltip';\nimport { lazyLoad } from '../lazyLoad';\n\nconst DocMarkdownBlock = lazyLoad(() => import('./DocMarkdownBlock'));\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  /** Key of the documentation chunk */\n  doc: string;\n}\n\ninterface State {\n  content?: string;\n  loading: boolean;\n  open: boolean;\n}\n\nexport default class DocTooltip extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false, open: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    document.addEventListener('scroll', this.close, true);\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.doc !== this.props.doc) {\n      this.setState({ content: undefined, loading: false, open: false });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    document.removeEventListener('scroll', this.close, true);\n  }\n\n  fetchContent = () => {\n    this.setState({ loading: true });\n    import(`Docs/tooltips/${this.props.doc}.md`).then(\n      ({ default: content }) => {\n        if (this.mounted) {\n          this.setState({ content, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  close = () => {\n    this.setState({ open: false });\n  };\n\n  renderOverlay() {\n    return (\n      <div className=\"abs-width-300\">\n        {this.state.loading ? (\n          <i className=\"spinner\" />\n        ) : (\n          <DocMarkdownBlock className=\"cut-margins\" content={this.state.content} isTooltip={true} />\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <HelpTooltip\n        className={this.props.className}\n        onShow={this.fetchContent}\n        overlay={this.renderOverlay()}>\n        {this.props.children}\n      </HelpTooltip>\n    );\n  }\n}\n","var map = {\n\t\"./branches/no-branch-support.md\": [\n\t\t947,\n\t\t358\n\t],\n\t\"./branches/single-branch.md\": [\n\t\t946,\n\t\t357\n\t],\n\t\"./editions/datacenter.md\": [\n\t\t945,\n\t\t356\n\t],\n\t\"./editions/developer.md\": [\n\t\t944,\n\t\t355\n\t],\n\t\"./editions/enterprise.md\": [\n\t\t943,\n\t\t354\n\t],\n\t\"./organizations/add-organization-member.md\": [\n\t\t942,\n\t\t353\n\t],\n\t\"./organizations/organization.md\": [\n\t\t941,\n\t\t352\n\t],\n\t\"./quality-gates/built-in-quality-gate.md\": [\n\t\t940,\n\t\t351\n\t],\n\t\"./quality-gates/default-quality-gate.md\": [\n\t\t939,\n\t\t350\n\t],\n\t\"./quality-gates/project-homepage-quality-gate.md\": [\n\t\t938,\n\t\t349\n\t],\n\t\"./quality-gates/quality-gate-conditions.md\": [\n\t\t937,\n\t\t348\n\t],\n\t\"./quality-gates/quality-gate-projects.md\": [\n\t\t936,\n\t\t347\n\t],\n\t\"./quality-gates/quality-gate.md\": [\n\t\t935,\n\t\t346\n\t],\n\t\"./quality-profiles/built-in-quality-profile.md\": [\n\t\t934,\n\t\t345\n\t],\n\t\"./quality-profiles/default-quality-profile.md\": [\n\t\t933,\n\t\t344\n\t],\n\t\"./quality-profiles/quality-profile-projects.md\": [\n\t\t932,\n\t\t343\n\t],\n\t\"./rules/custom-rule-removal.md\": [\n\t\t931,\n\t\t342\n\t],\n\t\"./rules/custom-rules.md\": [\n\t\t930,\n\t\t341\n\t],\n\t\"./rules/rule-templates.md\": [\n\t\t929,\n\t\t340\n\t],\n\t\"./rules/rules-quality-profiles.md\": [\n\t\t928,\n\t\t339\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn (typeof module === \"object\" && module && module.__esModule ? module : Object.assign({/* fake namespace object */}, typeof module === \"object\" && module, { \"default\": module }));\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 903;\nmodule.exports = webpackAsyncContext;","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { Condition, Metric, QualityGate, Omit } from '../app/types';\n\nexport function fetchQualityGates(data: {\n  organization?: string;\n}): Promise<{\n  actions: { create: boolean };\n  qualitygates: QualityGate[];\n}> {\n  return getJSON('/api/qualitygates/list', data).catch(throwGlobalError);\n}\n\nexport function fetchQualityGate(data: {\n  id: number;\n  organization?: string;\n}): Promise<QualityGate> {\n  return getJSON('/api/qualitygates/show', data).catch(throwGlobalError);\n}\n\nexport function createQualityGate(data: {\n  name: string;\n  organization?: string;\n}): Promise<QualityGate> {\n  return postJSON('/api/qualitygates/create', data).catch(throwGlobalError);\n}\n\nexport function deleteQualityGate(data: {\n  id: number;\n  organization?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/destroy', data).catch(throwGlobalError);\n}\n\nexport function renameQualityGate(data: {\n  id: number;\n  name: string;\n  organization?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/rename', data).catch(throwGlobalError);\n}\n\nexport function copyQualityGate(data: {\n  id: number;\n  name: string;\n  organization?: string;\n}): Promise<QualityGate> {\n  return postJSON('/api/qualitygates/copy', data).catch(throwGlobalError);\n}\n\nexport function setQualityGateAsDefault(data: {\n  id: number;\n  organization?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/set_as_default', data).catch(throwGlobalError);\n}\n\nexport function createCondition(\n  data: {\n    gateId: number;\n    organization?: string;\n  } & Omit<Condition, 'id'>\n): Promise<Condition> {\n  return postJSON('/api/qualitygates/create_condition', data);\n}\n\nexport function updateCondition(data: { organization?: string } & Condition): Promise<Condition> {\n  return postJSON('/api/qualitygates/update_condition', data);\n}\n\nexport function deleteCondition(data: { id: number; organization?: string }): Promise<void> {\n  return post('/api/qualitygates/delete_condition', data);\n}\n\nexport function getGateForProject(data: {\n  organization?: string;\n  project: string;\n}): Promise<QualityGate | undefined> {\n  return getJSON('/api/qualitygates/get_by_project', data).then(\n    ({ qualityGate }) =>\n      qualityGate && {\n        ...qualityGate,\n        isDefault: qualityGate.default\n      },\n    throwGlobalError\n  );\n}\n\nexport function searchGates(data: {\n  gateId: number;\n  organization?: string;\n  page?: number;\n  pageSize?: number;\n  query?: string;\n  selected?: string;\n}): Promise<{ more: boolean; results: Array<{ id: string; name: string; selected: boolean }> }> {\n  return getJSON('/api/qualitygates/search', data).catch(throwGlobalError);\n}\n\nexport function associateGateWithProject(data: {\n  gateId: number;\n  organization?: string;\n  projectKey?: string;\n  projectId?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/select', data).catch(throwGlobalError);\n}\n\nexport function dissociateGateWithProject(data: {\n  gateId: number;\n  organization?: string;\n  projectKey?: string;\n  projectId?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/deselect', data).catch(throwGlobalError);\n}\n\nexport interface ConditionAnalysis {\n  comparator: string;\n  errorThreshold?: string;\n  metric: string;\n  periodIndex?: number;\n  onLeak?: boolean;\n  status: string;\n  value: string;\n  warningThreshold?: string;\n}\n\nexport interface ApplicationProject {\n  key: string;\n  name: string;\n  status: string;\n  conditions: ConditionAnalysis[];\n}\n\nexport interface ApplicationQualityGate {\n  metrics: Metric[];\n  projects: ApplicationProject[];\n  status: string;\n}\n\nexport function getApplicationQualityGate(data: {\n  application: string;\n  organization?: string;\n}): Promise<ApplicationQualityGate> {\n  return getJSON('/api/qualitygates/application_status', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport getStore from './getStore';\nimport getHistory from './getHistory';\nimport { requireAuthorization } from '../../store/appState/duck';\n\nexport default () => {\n  const store = getStore();\n  const history = getHistory();\n\n  const returnTo = window.location.pathname + window.location.search + window.location.hash;\n\n  store.dispatch(requireAuthorization());\n  history.replace({\n    pathname: '/sessions/new',\n    query: { return_to: returnTo }\n  });\n};\n"],"sourceRoot":""}