{"version":3,"sources":["webpack:///./src/main/js/apps/custom-measures/components/Form.tsx","webpack:///./src/main/js/apps/custom-measures/components/CreateButton.tsx","webpack:///./src/main/js/apps/custom-measures/components/Header.tsx","webpack:///./src/main/js/apps/custom-measures/components/DeleteForm.tsx","webpack:///./src/main/js/apps/custom-measures/components/MeasureDate.tsx","webpack:///./src/main/js/apps/custom-measures/components/Item.tsx","webpack:///./src/main/js/apps/custom-measures/components/List.tsx","webpack:///./src/main/js/apps/custom-measures/components/App.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/icons-components/SettingsIcon.tsx","webpack:///./src/main/js/components/controls/ActionsDropdown.tsx"],"names":["_super","Form","props","_this","call","this","mounted","handleSubmit","state","metricKey","onSubmit","description","value","then","onClose","Promise","reject","undefined","fetchCustomMetrics","setState","loading","Object","api_metrics","isCustom","metrics","handleMetricSelect","_a","handleDescriptionChange","event","currentTarget","handleValueChange","renderMetricSelect","options","length","index_js_exposed","className","htmlFor","l10n","Select","autoFocus","clearable","onChange","measure","metric","key","__extends","prototype","componentDidMount","componentWillUnmount","render","skipMetrics","_b","filter","includes","map","label","name","forbidSubmitting","SimpleModal","header","onCloseClick","onFormSubmit","submitting","id","maxLength","required","type","DeferredSpinner","buttons","disabled","confirmButtonText","onClick","CreateButton","apply","arguments","modal","handleClick","handleClose","CreateButton_extends","components_Form","onCreate","Header","components_CreateButton","DeleteForm","MeasureDate","updatedAt","DateFormatter","date","createdAt","Item","deleteForm","editForm","handleEditClick","handleDeleteClick","closeEditForm","closeDeleteForm","handleEditFormSubmit","data","onEdit","__assign","handleDeleteFormSubmit","onDelete","Item_extends","data-metric","pending","Tooltip","overlay","domain","helpers_measures","user","ActionsDropdown","destructive","List","measures","sortBy_default","toLowerCase","components_Item","PAGE_SIZE","App_App","App","fetchMeasures","api_measures","projectKey","component","ps","customMeasures","paging","stopLoading","fetchMore","p","pageIndex","concat","handleCreate","App_assign","total","handleEdit","handleDelete","measureId","App_extends","Suggestions","suggestions","Helmet_default","a","title","ListFooter","count","loadMore","ready","context","addSuggestions","componentDidUpdate","prevProps","removeSuggestions","contextTypes","prop_types__WEBPACK_IMPORTED_MODULE_1__","isRequired","react__WEBPACK_IMPORTED_MODULE_0__","stopSubmitting","handleCloseClick","preventDefault","blur","handleFormSubmit","submit","handleSubmitClick","result","_components_controls_Modal__WEBPACK_IMPORTED_MODULE_1__","contentLabel","onRequestClose","children","onSubmitClick","SettingsIcon","fill","_c","size","Icon","viewBox","transform","d","style","Dropdown","onOpen","classnames","toggleClassName","button-small","small","DropdownIcon","ActionsDropdown_ActionsDropdownItem","ActionsDropdownItem","text-danger","download","to","href","es","ActionsDropdownDivider"],"mappings":"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","file":"js/280.47c9d2ee.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { getAllMetrics } from '../../../api/metrics';\nimport { CustomMeasure, Metric } from '../../../app/types';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport Select from '../../../components/controls/Select';\nimport SimpleModal from '../../../components/controls/SimpleModal';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  confirmButtonText: string;\n  header: string;\n  measure?: CustomMeasure;\n  onClose: () => void;\n  onSubmit: (data: { description: string; metricKey: string; value: string }) => Promise<void>;\n  skipMetrics?: string[];\n}\n\ninterface State {\n  description: string;\n  loading: boolean;\n  metricKey?: string;\n  metrics?: Metric[];\n  value: string;\n}\n\nexport default class Form extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      description: (props.measure && props.measure.description) || '',\n      loading: false,\n      metricKey: props.measure && props.measure.metric.key,\n      value: (props.measure && props.measure.value) || ''\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    if (!this.props.measure) {\n      this.fetchCustomMetrics();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    return this.state.metricKey\n      ? this.props\n          .onSubmit({\n            description: this.state.description,\n            metricKey: this.state.metricKey,\n            value: this.state.value\n          })\n          .then(this.props.onClose)\n      : Promise.reject(undefined);\n  };\n\n  fetchCustomMetrics = () => {\n    this.setState({ loading: true });\n    getAllMetrics({ isCustom: true }).then(\n      metrics => {\n        if (this.mounted) {\n          this.setState({ loading: false, metrics });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  handleMetricSelect = ({ value }: { value: string }) => {\n    this.setState({ metricKey: value });\n  };\n\n  handleDescriptionChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ description: event.currentTarget.value });\n  };\n\n  handleValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ value: event.currentTarget.value });\n  };\n\n  renderMetricSelect = (options: { label: string; value: string }[]) => {\n    if (!options.length && !this.state.loading) {\n      return (\n        <div className=\"alert alert-warning\">{translate('custom_measures.all_metrics_taken')}</div>\n      );\n    }\n    return (\n      <div className=\"modal-field\">\n        <label htmlFor=\"create-custom-measure-metric\">\n          {translate('custom_measures.metric')}\n          <em className=\"mandatory\">*</em>\n        </label>\n        {this.state.loading ? (\n          <i className=\"spinner\" />\n        ) : (\n          <Select\n            autoFocus={true}\n            clearable={false}\n            onChange={this.handleMetricSelect}\n            options={options}\n            value={this.state.metricKey}\n          />\n        )}\n      </div>\n    );\n  };\n\n  render() {\n    const { skipMetrics = [] } = this.props;\n    const { metrics = [] } = this.state;\n    const options = metrics\n      .filter(metric => !skipMetrics.includes(metric.key))\n      .map(metric => ({ label: metric.name, value: metric.key }));\n    const forbidSubmitting = !this.props.measure && !options.length;\n\n    return (\n      <SimpleModal\n        header={this.props.header}\n        onClose={this.props.onClose}\n        onSubmit={this.handleSubmit}>\n        {({ onCloseClick, onFormSubmit, submitting }) => (\n          <form onSubmit={onFormSubmit}>\n            <header className=\"modal-head\">\n              <h2>{this.props.header}</h2>\n            </header>\n\n            <div className=\"modal-body\">\n              {!this.props.measure && this.renderMetricSelect(options)}\n\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-custom-measure-value\">\n                  {translate('value')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n                <input\n                  autoFocus={this.props.measure !== undefined}\n                  id=\"create-custom-measure-value\"\n                  maxLength={200}\n                  name=\"value\"\n                  onChange={this.handleValueChange}\n                  required={true}\n                  type=\"text\"\n                  value={this.state.value}\n                />\n              </div>\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-custom-measure-description\">\n                  {translate('description')}\n                </label>\n                <textarea\n                  id=\"create-custom-measure-description\"\n                  name=\"description\"\n                  onChange={this.handleDescriptionChange}\n                  value={this.state.description}\n                />\n              </div>\n            </div>\n\n            <footer className=\"modal-foot\">\n              <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n              <SubmitButton\n                disabled={forbidSubmitting || submitting}\n                id=\"create-custom-measure-submit\">\n                {this.props.confirmButtonText}\n              </SubmitButton>\n              <ResetButtonLink\n                disabled={submitting}\n                id=\"create-custom-measure-cancel\"\n                onClick={onCloseClick}>\n                {translate('cancel')}\n              </ResetButtonLink>\n            </footer>\n          </form>\n        )}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Form from './Form';\nimport { Button } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  onCreate: (data: { description: string; metricKey: string; value: string }) => Promise<void>;\n  skipMetrics: string[] | undefined;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class CreateButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleClose = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Button id=\"custom-measures-create\" onClick={this.handleClick}>\n          {translate('create')}\n        </Button>\n        {this.state.modal && (\n          <Form\n            confirmButtonText={translate('create')}\n            header={translate('custom_measures.create_custom_measure')}\n            onClose={this.handleClose}\n            onSubmit={this.props.onCreate}\n            skipMetrics={this.props.skipMetrics}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport CreateButton from './CreateButton';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  loading: boolean;\n  onCreate: (data: { description: string; metricKey: string; value: string }) => Promise<void>;\n  skipMetrics: string[] | undefined;\n}\n\nexport default function Header({ loading, onCreate, skipMetrics }: Props) {\n  return (\n    <header className=\"page-header\" id=\"custom-measures-header\">\n      <h1 className=\"page-title\">{translate('custom_measures.page')}</h1>\n      <DeferredSpinner loading={loading} />\n      <div className=\"page-actions\">\n        <CreateButton onCreate={onCreate} skipMetrics={skipMetrics} />\n      </div>\n      <p className=\"page-description\">{translate('custom_measures.page.description')}</p>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { CustomMeasure } from '../../../app/types';\nimport SimpleModal from '../../../components/controls/SimpleModal';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\n\ninterface Props {\n  measure: CustomMeasure;\n  onClose: () => void;\n  onSubmit: () => Promise<void>;\n}\n\nexport default function DeleteForm({ measure, onClose, onSubmit }: Props) {\n  const header = translate('custom_measures.delete_custom_measure');\n\n  return (\n    <SimpleModal header={header} onClose={onClose} onSubmit={onSubmit}>\n      {({ onCloseClick, onFormSubmit, submitting }) => (\n        <form onSubmit={onFormSubmit}>\n          <header className=\"modal-head\">\n            <h2>{header}</h2>\n          </header>\n\n          <div className=\"modal-body\">\n            {translateWithParameters(\n              'custom_measures.delete_custom_measure.confirmation',\n              measure.metric.name\n            )}\n          </div>\n\n          <footer className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n            <SubmitButton className=\"button-red\" disabled={submitting}>\n              {translate('delete')}\n            </SubmitButton>\n            <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </footer>\n        </form>\n      )}\n    </SimpleModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { CustomMeasure } from '../../../app/types';\nimport DateFormatter from '../../../components/intl/DateFormatter';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  measure: CustomMeasure;\n}\n\nexport default function MeasureDate({ measure }: Props) {\n  if (measure.updatedAt) {\n    return (\n      <>\n        {translate('updated_on')}{' '}\n        <span className=\"js-custom-measure-created-at\">\n          <DateFormatter date={measure.updatedAt} />\n        </span>\n      </>\n    );\n  } else if (measure.createdAt) {\n    return (\n      <>\n        {translate('created_on')}{' '}\n        <span className=\"js-custom-measure-created-at\">\n          <DateFormatter date={measure.createdAt} />\n        </span>\n      </>\n    );\n  } else {\n    return <>{translate('created')}</>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeleteForm from './DeleteForm';\nimport Form from './Form';\nimport MeasureDate from './MeasureDate';\nimport { CustomMeasure } from '../../../app/types';\nimport ActionsDropdown, {\n  ActionsDropdownDivider,\n  ActionsDropdownItem\n} from '../../../components/controls/ActionsDropdown';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport { translate } from '../../../helpers/l10n';\nimport { formatMeasure } from '../../../helpers/measures';\n\ninterface Props {\n  measure: CustomMeasure;\n  onDelete: (measureId: string) => Promise<void>;\n  onEdit: (data: { description: string; id: string; value: string }) => Promise<void>;\n}\n\ninterface State {\n  deleteForm: boolean;\n  editForm: boolean;\n}\n\nexport default class Item extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    deleteForm: false,\n    editForm: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleEditClick = () => {\n    this.setState({ editForm: true });\n  };\n\n  handleDeleteClick = () => {\n    this.setState({ deleteForm: true });\n  };\n\n  closeEditForm = () => {\n    if (this.mounted) {\n      this.setState({ editForm: false });\n    }\n  };\n\n  closeDeleteForm = () => {\n    if (this.mounted) {\n      this.setState({ deleteForm: false });\n    }\n  };\n\n  handleEditFormSubmit = (data: { description: string; value: string }) => {\n    return this.props.onEdit({ id: this.props.measure.id, ...data });\n  };\n\n  handleDeleteFormSubmit = () => {\n    return this.props.onDelete(this.props.measure.id);\n  };\n\n  render() {\n    const { measure } = this.props;\n\n    return (\n      <tr data-metric={measure.metric.key}>\n        <td className=\"nowrap\">\n          <div>\n            <span className=\"js-custom-measure-metric-name\">{measure.metric.name}</span>\n            {measure.pending && (\n              <Tooltip overlay={translate('custom_measures.pending_tooltip')}>\n                <span className=\"js-custom-measure-pending badge badge-warning spacer-left\">\n                  {translate('custom_measures.pending')}\n                </span>\n              </Tooltip>\n            )}\n          </div>\n          <span className=\"js-custom-measure-domain note\">{measure.metric.domain}</span>\n        </td>\n\n        <td className=\"nowrap\">\n          <strong className=\"js-custom-measure-value\">\n            {formatMeasure(measure.value, measure.metric.type)}\n          </strong>\n        </td>\n\n        <td>\n          <span className=\"js-custom-measure-description\">{measure.description}</span>\n        </td>\n\n        <td>\n          <MeasureDate measure={measure} /> {translate('by_')}{' '}\n          <span className=\"js-custom-measure-user\">{measure.user.name}</span>\n        </td>\n\n        <td className=\"thin nowrap\">\n          <ActionsDropdown>\n            <ActionsDropdownItem\n              className=\"js-custom-measure-update\"\n              onClick={this.handleEditClick}>\n              {translate('update_verb')}\n            </ActionsDropdownItem>\n            <ActionsDropdownDivider />\n            <ActionsDropdownItem\n              className=\"js-custom-measure-delete\"\n              destructive={true}\n              onClick={this.handleDeleteClick}>\n              {translate('delete')}\n            </ActionsDropdownItem>\n          </ActionsDropdown>\n        </td>\n\n        {this.state.editForm && (\n          <Form\n            confirmButtonText={translate('update_verb')}\n            header={translate('custom_measures.update_custom_measure')}\n            measure={this.props.measure}\n            onClose={this.closeEditForm}\n            onSubmit={this.handleEditFormSubmit}\n          />\n        )}\n\n        {this.state.deleteForm && (\n          <DeleteForm\n            measure={this.props.measure}\n            onClose={this.closeDeleteForm}\n            onSubmit={this.handleDeleteFormSubmit}\n          />\n        )}\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { sortBy } from 'lodash';\nimport Item from './Item';\nimport { CustomMeasure } from '../../../app/types';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  measures: CustomMeasure[];\n  onDelete: (measureId: string) => Promise<void>;\n  onEdit: (data: { description: string; id: string; value: string }) => Promise<void>;\n}\n\nexport default function List({ measures, onDelete, onEdit }: Props) {\n  return (\n    <div className=\"boxed-group boxed-group-inner\" id=\"custom-measures-list\">\n      {measures.length > 0 ? (\n        <table className=\"data zebra zebra-hover\">\n          <thead>\n            <tr>\n              <th>{translate('custom_measures.metric')}</th>\n              <th>{translate('value')}</th>\n              <th>{translate('description')}</th>\n              <th>{translate('date')}</th>\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            {sortBy(measures, measure => measure.metric.name.toLowerCase()).map(measure => (\n              <Item key={measure.id} measure={measure} onDelete={onDelete} onEdit={onEdit} />\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p>{translate('no_results')}</p>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport Header from './Header';\nimport List from './List';\nimport {\n  getCustomMeasures,\n  createCustomMeasure,\n  updateCustomMeasure,\n  deleteCustomMeasure\n} from '../../../api/measures';\nimport { Paging, CustomMeasure } from '../../../app/types';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport ListFooter from '../../../components/controls/ListFooter';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  component: { key: string };\n}\n\ninterface State {\n  loading: boolean;\n  measures?: CustomMeasure[];\n  paging?: Paging;\n}\n\nconst PAGE_SIZE = 50;\n\nexport default class App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchMeasures();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchMeasures = () => {\n    this.setState({ loading: true });\n    getCustomMeasures({ projectKey: this.props.component.key, ps: PAGE_SIZE }).then(\n      ({ customMeasures, paging }) => {\n        if (this.mounted) {\n          this.setState({ loading: false, measures: customMeasures, paging });\n        }\n      },\n      this.stopLoading\n    );\n  };\n\n  fetchMore = () => {\n    const { paging } = this.state;\n    if (paging) {\n      this.setState({ loading: true });\n      getCustomMeasures({\n        projectKey: this.props.component.key,\n        p: paging.pageIndex + 1,\n        ps: PAGE_SIZE\n      }).then(({ customMeasures, paging }) => {\n        if (this.mounted) {\n          this.setState(({ measures = [] }: State) => ({\n            loading: false,\n            measures: [...measures, ...customMeasures],\n            paging\n          }));\n        }\n      }, this.stopLoading);\n    }\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  handleCreate = (data: { description: string; metricKey: string; value: string }) => {\n    return createCustomMeasure({ ...data, projectKey: this.props.component.key }).then(measure => {\n      if (this.mounted) {\n        this.setState(({ measures = [], paging }: State) => ({\n          measures: [...measures, measure],\n          paging: paging && { ...paging, total: paging.total + 1 }\n        }));\n      }\n    });\n  };\n\n  handleEdit = (data: { description: string; id: string; value: string }) => {\n    return updateCustomMeasure(data).then(() => {\n      if (this.mounted) {\n        this.setState(({ measures = [] }: State) => ({\n          measures: measures.map(\n            measure => (measure.id === data.id ? { ...measure, ...data } : measure)\n          )\n        }));\n      }\n    });\n  };\n\n  handleDelete = (measureId: string) => {\n    return deleteCustomMeasure({ id: measureId }).then(() => {\n      if (this.mounted) {\n        this.setState(({ measures = [], paging }: State) => ({\n          measures: measures.filter(measure => measure.id !== measureId),\n          paging: paging && { ...paging, total: paging.total - 1 }\n        }));\n      }\n    });\n  };\n\n  render() {\n    const { loading, measures, paging } = this.state;\n\n    return (\n      <>\n        <Suggestions suggestions=\"custom_measures\" />\n        <Helmet title={translate('custom_measures.page')} />\n        <div className=\"page page-limited\">\n          <Header\n            loading={loading}\n            onCreate={this.handleCreate}\n            skipMetrics={measures && measures.map(measure => measure.metric.key)}\n          />\n          {measures && (\n            <List measures={measures} onDelete={this.handleDelete} onEdit={this.handleEdit} />\n          )}\n          {measures &&\n            paging && (\n              <ListFooter\n                count={measures.length}\n                loadMore={this.fetchMore}\n                ready={!loading}\n                total={paging.total}\n              />\n            )}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default class Suggestions extends React.PureComponent<Props> {\n  context!: { suggestions: SuggestionsContext };\n\n  static contextTypes = {\n    suggestions: PropTypes.object.isRequired\n  };\n\n  componentDidMount() {\n    this.context.suggestions.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.context.suggestions.removeSuggestions(this.props.suggestions);\n      this.context.suggestions.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.context.suggestions.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from '../../components/controls/Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    return (\n      <Modal contentLabel={this.props.header} onRequestClose={this.props.onClose}>\n        {this.props.children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function SettingsIcon({ className, fill = 'currentColor', size = 14 }: IconProps) {\n  return (\n    <Icon className={className} size={size} viewBox=\"0 0 14 14\">\n      <g transform=\"matrix(0.0364583,0,0,0.0364583,0,-1.16667)\">\n        <path\n          d=\"M256,224C256,206.333 249.75,191.25 237.25,178.75C224.75,166.25 209.667,160 192,160C174.333,160 159.25,166.25 146.75,178.75C134.25,191.25 128,206.333 128,224C128,241.667 134.25,256.75 146.75,269.25C159.25,281.75 174.333,288 192,288C209.667,288 224.75,281.75 237.25,269.25C249.75,256.75 256,241.667 256,224ZM384,196.75L384,252.25C384,254.25 383.333,256.167 382,258C380.667,259.833 379,260.917 377,261.25L330.75,268.25C327.583,277.25 324.333,284.833 321,291C326.833,299.333 335.75,310.833 347.75,325.5C349.417,327.5 350.25,329.583 350.25,331.75C350.25,333.917 349.5,335.833 348,337.5C343.5,343.667 335.25,352.667 323.25,364.5C311.25,376.333 303.417,382.25 299.75,382.25C297.75,382.25 295.583,381.5 293.25,380L258.75,353C251.417,356.833 243.833,360 236,362.5C233.333,385.167 230.917,400.667 228.75,409C227.583,413.667 224.583,416 219.75,416L164.25,416C161.917,416 159.875,415.292 158.125,413.875C156.375,412.458 155.417,410.667 155.25,408.5L148.25,362.5C140.083,359.833 132.583,356.75 125.75,353.25L90.5,380C88.833,381.5 86.75,382.25 84.25,382.25C81.917,382.25 79.833,381.333 78,379.5C57,360.5 43.25,346.5 36.75,337.5C35.583,335.833 35,333.917 35,331.75C35,329.75 35.667,327.833 37,326C39.5,322.5 43.75,316.958 49.75,309.375C55.75,301.792 60.25,295.917 63.25,291.75C58.75,283.417 55.333,275.167 53,267L7.25,260.25C5.083,259.917 3.333,258.875 2,257.125C0.667,255.375 0,253.417 0,251.25L0,195.75C0,193.75 0.667,191.833 2,190C3.333,188.167 4.917,187.083 6.75,186.75L53.25,179.75C55.583,172.083 58.833,164.417 63,156.75C56.333,147.25 47.417,135.75 36.25,122.25C34.583,120.25 33.75,118.25 33.75,116.25C33.75,114.583 34.5,112.667 36,110.5C40.333,104.5 48.542,95.542 60.625,83.625C72.708,71.708 80.583,65.75 84.25,65.75C86.417,65.75 88.583,66.583 90.75,68.25L125.25,95C132.583,91.167 140.167,88 148,85.5C150.667,62.833 153.083,47.333 155.25,39C156.417,34.333 159.417,32 164.25,32L219.75,32C222.083,32 224.125,32.708 225.875,34.125C227.625,35.542 228.583,37.333 228.75,39.5L235.75,85.5C243.917,88.167 251.417,91.25 258.25,94.75L293.75,68C295.25,66.5 297.25,65.75 299.75,65.75C301.917,65.75 304,66.583 306,68.25C327.5,88.083 341.25,102.25 347.25,110.75C348.417,112.083 349,113.917 349,116.25C349,118.25 348.333,120.167 347,122C344.5,125.5 340.25,131.042 334.25,138.625C328.25,146.208 323.75,152.083 320.75,156.25C325.083,164.583 328.5,172.75 331,180.75L376.75,187.75C378.917,188.083 380.667,189.125 382,190.875C383.333,192.625 384,194.583 384,196.75Z\"\n          style={{ fill }}\n        />\n      </g>\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Link } from 'react-router';\nimport { LocationDescriptor } from 'history';\nimport Dropdown from './Dropdown';\nimport DropdownIcon from '../icons-components/DropdownIcon';\nimport SettingsIcon from '../icons-components/SettingsIcon';\nimport { Button } from '../ui/buttons';\n\ninterface Props {\n  className?: string;\n  children: React.ReactNode;\n  onOpen?: () => void;\n  small?: boolean;\n  toggleClassName?: string;\n}\n\nexport default function ActionsDropdown(props: Props) {\n  return (\n    <Dropdown\n      className={props.className}\n      onOpen={props.onOpen}\n      overlay={<ul className=\"menu\">{props.children}</ul>}>\n      <Button\n        className={classNames('dropdown-toggle', props.toggleClassName, {\n          'button-small': props.small\n        })}>\n        <SettingsIcon size={props.small ? 12 : 14} />\n        <DropdownIcon className=\"little-spacer-left\" />\n      </Button>\n    </Dropdown>\n  );\n}\n\ninterface ItemProps {\n  className?: string;\n  children: React.ReactNode;\n  destructive?: boolean;\n  /** used to pass a name of downloaded file */\n  download?: string;\n  id?: string;\n  onClick?: () => void;\n  to?: LocationDescriptor;\n}\n\nexport class ActionsDropdownItem extends React.PureComponent<ItemProps> {\n  handleClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    if (this.props.onClick) {\n      this.props.onClick();\n    }\n  };\n\n  render() {\n    const className = classNames(this.props.className, { 'text-danger': this.props.destructive });\n\n    if (this.props.download && typeof this.props.to === 'string') {\n      return (\n        <li>\n          <a\n            className={className}\n            download={this.props.download}\n            href={this.props.to}\n            id={this.props.id}>\n            {this.props.children}\n          </a>\n        </li>\n      );\n    }\n\n    if (this.props.to) {\n      return (\n        <li>\n          <Link className={className} id={this.props.id} to={this.props.to}>\n            {this.props.children}\n          </Link>\n        </li>\n      );\n    }\n\n    return (\n      <li>\n        <a className={className} href=\"#\" id={this.props.id} onClick={this.handleClick}>\n          {this.props.children}\n        </a>\n      </li>\n    );\n  }\n}\n\nexport function ActionsDropdownDivider() {\n  return <li className=\"divider\" />;\n}\n"],"sourceRoot":""}