{"version":3,"sources":["webpack:///./src/main/js/apps/organizations/components/OrganizationEdit.js","webpack:///./src/main/js/api/user_groups.ts","webpack:///./src/main/js/apps/organizations/actions.js"],"names":["OrganizationEdit","_super","props","_this","call","this","handleAvatarInputChange","e","value","target","setState","avatar","changeAvatarImage","avatarImage","handleSubmit","preventDefault","changes","state","description","name","url","loading","updateOrganization","organization","key","then","mounted","lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default","__extends","prototype","componentDidMount","componentWillUnmount","render","title","Object","_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","onSubmit","htmlFor","disabled","id","maxLength","onChange","required","type","alt","height","src","rows","_components_ui_buttons__WEBPACK_IMPORTED_MODULE_6__","PureComponent","mapDispatchToProps","_actions__WEBPACK_IMPORTED_MODULE_5__","__webpack_exports__","react_redux__WEBPACK_IMPORTED_MODULE_3__","UnconnectedOrganizationEdit","searchUsersGroups","data","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","getUsersInGroup","addUserToGroup","removeUserFromGroup","createGroup","r","group","updateGroup","deleteGroup","fetchOrganization","dispatch","Promise","all","_api_organizations__WEBPACK_IMPORTED_MODULE_0__","_a","navigation","organizationWithPermissions","__assign","_store_organizations_duck__WEBPACK_IMPORTED_MODULE_1__","_store_rootActions__WEBPACK_IMPORTED_MODULE_5__","fetchOrganizationGroups","_api_user_groups__WEBPACK_IMPORTED_MODULE_3__","response","groups","createOrganization","fields","_store_globalMessages_duck__WEBPACK_IMPORTED_MODULE_7__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_8__","error","reject","onRejected","deleteOrganization","fetchMembers","receiveAction","query","page","_store_organizationsMembers_actions__WEBPACK_IMPORTED_MODULE_2__","ps","p","q","users","total","paging","pageIndex","onMembersFail","fetchOrganizationMembers","fetchMoreOrganizationMembers","getState","_store_rootReducer__WEBPACK_IMPORTED_MODULE_6__","addOrganizationMember","member","login","user","removeOrganizationMember","updateOrganizationMemberGroups","add","remove","_store_users_actions__WEBPACK_IMPORTED_MODULE_4__","groupCount","length","promises","map","concat"],"mappings":"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","file":"js/286.89c77e10.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { debounce } from 'lodash';\nimport { translate } from '../../../helpers/l10n';\n/*:: import type { Organization } from '../../../store/organizations/duck'; */\nimport { getOrganizationByKey } from '../../../store/rootReducer';\nimport { updateOrganization } from '../actions';\nimport { SubmitButton } from '../../../components/ui/buttons';\n\n/*::\ntype Props = {\n  organization: Organization,\n  updateOrganization: (string, Object) => Promise<*>\n};\n*/\n\nclass OrganizationEdit extends React.PureComponent {\n  /*:: mounted: boolean; */\n\n  /*:: props: Props; */\n\n  /*:: state: {\n    loading: boolean,\n    avatar: string,\n    avatarImage: string,\n    description: string,\n    name: string,\n    url: string\n  };\n*/\n\n  constructor(props /*: Props */) {\n    super(props);\n    this.state = {\n      loading: false,\n\n      avatar: props.organization.avatar || '',\n      avatarImage: props.organization.avatar || '',\n      description: props.organization.description || '',\n      name: props.organization.name,\n      url: props.organization.url || ''\n    };\n    this.changeAvatarImage = debounce(this.changeAvatarImage, 500);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleAvatarInputChange = (e /*: Object */) => {\n    const { value } = e.target;\n    this.setState({ avatar: value });\n    this.changeAvatarImage(value);\n  };\n\n  changeAvatarImage = (value /*: string */) => {\n    this.setState({ avatarImage: value });\n  };\n\n  handleSubmit = (e /*: Object */) => {\n    e.preventDefault();\n    const changes = {\n      avatar: this.state.avatar,\n      description: this.state.description,\n      name: this.state.name,\n      url: this.state.url\n    };\n    this.setState({ loading: true });\n    this.props.updateOrganization(this.props.organization.key, changes).then(() => {\n      if (this.mounted) {\n        this.setState({ loading: false });\n      }\n    });\n  };\n\n  render() {\n    const title = translate('organization.edit');\n    return (\n      <div className=\"page page-limited\">\n        <Helmet title={title} />\n\n        <header className=\"page-header\">\n          <h1 className=\"page-title\">{title}</h1>\n        </header>\n\n        <div className=\"boxed-group boxed-group-inner\">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"modal-field\">\n              <label htmlFor=\"organization-name\">\n                {translate('organization.name')}\n                <em className=\"mandatory\">*</em>\n              </label>\n              <input\n                disabled={this.state.loading}\n                id=\"organization-name\"\n                maxLength=\"64\"\n                name=\"name\"\n                onChange={e => this.setState({ name: e.target.value })}\n                required={true}\n                type=\"text\"\n                value={this.state.name}\n              />\n              <div className=\"modal-field-description\">\n                {translate('organization.name.description')}\n              </div>\n            </div>\n            <div className=\"modal-field\">\n              <label htmlFor=\"organization-avatar\">{translate('organization.avatar')}</label>\n              <input\n                disabled={this.state.loading}\n                id=\"organization-avatar\"\n                maxLength=\"256\"\n                name=\"avatar\"\n                onChange={this.handleAvatarInputChange}\n                type=\"text\"\n                value={this.state.avatar}\n              />\n              <div className=\"modal-field-description\">\n                {translate('organization.avatar.description')}\n              </div>\n              {!!this.state.avatarImage && (\n                <div className=\"spacer-top spacer-bottom\">\n                  <div className=\"little-spacer-bottom\">\n                    {translate('organization.avatar.preview')}\n                    {':'}\n                  </div>\n                  <img alt=\"\" height={30} src={this.state.avatarImage} />\n                </div>\n              )}\n            </div>\n            <div className=\"modal-field\">\n              <label htmlFor=\"organization-description\">{translate('description')}</label>\n              <textarea\n                disabled={this.state.loading}\n                id=\"organization-description\"\n                maxLength=\"256\"\n                name=\"description\"\n                onChange={e => this.setState({ description: e.target.value })}\n                rows=\"3\"\n                value={this.state.description}\n              />\n              <div className=\"modal-field-description\">\n                {translate('organization.description.description')}\n              </div>\n            </div>\n            <div className=\"modal-field\">\n              <label htmlFor=\"organization-url\">{translate('organization.url')}</label>\n              <input\n                disabled={this.state.loading}\n                id=\"organization-url\"\n                maxLength=\"256\"\n                name=\"url\"\n                onChange={e => this.setState({ url: e.target.value })}\n                type=\"text\"\n                value={this.state.url}\n              />\n              <div className=\"modal-field-description\">\n                {translate('organization.url.description')}\n              </div>\n            </div>\n            <div className=\"modal-field\">\n              <SubmitButton disabled={this.state.loading}>{translate('save')}</SubmitButton>\n              {this.state.loading && <i className=\"spinner spacer-left\" />}\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { updateOrganization };\n\nexport default connect(null, mapDispatchToProps)(OrganizationEdit);\n\nexport const UnconnectedOrganizationEdit = OrganizationEdit;\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from '../helpers/request';\nimport { Paging, Group } from '../app/types';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function searchUsersGroups(data: {\n  f?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n}): Promise<{ groups: Group[]; paging: Paging }> {\n  return getJSON('/api/user_groups/search', data).catch(throwGlobalError);\n}\n\nexport interface GroupUser {\n  login: string;\n  name: string;\n  selected: boolean;\n}\n\nexport function getUsersInGroup(data: {\n  id?: number;\n  name?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n  selected?: string;\n}): Promise<{ paging: Paging; users: GroupUser[] }> {\n  return getJSON('/api/user_groups/users', data).catch(throwGlobalError);\n}\n\nexport function addUserToGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/add_user', data).catch(throwGlobalError);\n}\n\nexport function removeUserFromGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/remove_user', data).catch(throwGlobalError);\n}\n\nexport function createGroup(data: {\n  description?: string;\n  organization: string | undefined;\n  name: string;\n}): Promise<Group> {\n  return postJSON('/api/user_groups/create', data).then(r => r.group, throwGlobalError);\n}\n\nexport function updateGroup(data: { description?: string; id: number; name?: string }) {\n  return post('/api/user_groups/update', data).catch(throwGlobalError);\n}\n\nexport function deleteGroup(data: { name: string; organization: string | undefined }) {\n  return post('/api/user_groups/delete', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport * as api from '../../api/organizations';\nimport * as actions from '../../store/organizations/duck';\nimport * as membersActions from '../../store/organizationsMembers/actions';\nimport { searchUsersGroups, addUserToGroup, removeUserFromGroup } from '../../api/user_groups';\nimport { receiveUser } from '../../store/users/actions';\nimport { onFail } from '../../store/rootActions';\nimport { getOrganizationMembersState } from '../../store/rootReducer';\nimport { addGlobalSuccessMessage } from '../../store/globalMessages/duck';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\n/*:: import type { Organization } from '../../store/organizations/duck'; */\n/*:: import type { Member } from '../../store/organizationsMembers/actions'; */\n\nconst PAGE_SIZE = 50;\n\nconst onRejected = (dispatch /*: Function */) => (error /*: Object */) => {\n  onFail(dispatch)(error);\n  return Promise.reject();\n};\n\nconst onMembersFail = (organization /*: string */, dispatch /*: Function */) => (\n  error /*: Object */\n) => {\n  onFail(dispatch)(error);\n  dispatch(membersActions.updateState(organization, { loading: false }));\n};\n\nexport const fetchOrganization = (key /*: string */) => (dispatch /*: Function */) => {\n  const onFulfilled = ([organization, navigation]) => {\n    if (organization) {\n      const organizationWithPermissions = { ...organization, ...navigation };\n      dispatch(actions.receiveOrganizations([organizationWithPermissions]));\n    }\n  };\n\n  return Promise.all([api.getOrganization(key), api.getOrganizationNavigation(key)]).then(\n    onFulfilled,\n    onFail(dispatch)\n  );\n};\n\nexport const fetchOrganizationGroups = (organization /*: string */) => (\n  dispatch /*: Function */\n) => {\n  return searchUsersGroups({ organization }).then(response => {\n    dispatch(actions.receiveOrganizationGroups(organization, response.groups));\n  }, onFail(dispatch));\n};\n\nexport const createOrganization = (fields /*: Object */) => (dispatch /*: Function */) => {\n  const onFulfilled = (organization /*: Organization */) => {\n    dispatch(actions.createOrganization(organization));\n    dispatch(\n      addGlobalSuccessMessage(translateWithParameters('organization.created', organization.name))\n    );\n    return organization;\n  };\n\n  return api.createOrganization(fields).then(onFulfilled, onRejected(dispatch));\n};\n\nexport const updateOrganization = (key /*: string */, changes /*: {} */) => (\n  dispatch /*: Function */\n) => {\n  const onFulfilled = () => {\n    dispatch(actions.updateOrganization(key, changes));\n    dispatch(addGlobalSuccessMessage(translate('organization.updated')));\n  };\n\n  return api.updateOrganization(key, changes).then(onFulfilled, onFail(dispatch));\n};\n\nexport const deleteOrganization = (key /*: string */) => (dispatch /*: Function */) => {\n  const onFulfilled = () => {\n    dispatch(actions.deleteOrganization(key));\n    dispatch(addGlobalSuccessMessage(translate('organization.deleted')));\n  };\n\n  return api.deleteOrganization(key).then(onFulfilled, onFail(dispatch));\n};\n\nconst fetchMembers = (\n  dispatch /*: Function */,\n  receiveAction /*: Function */,\n  key /*: string */,\n  query /*: ?string */,\n  page /*: ?number */\n) => {\n  dispatch(membersActions.updateState(key, { loading: true }));\n  const data /*: Object */ = {\n    organization: key,\n    ps: PAGE_SIZE\n  };\n  if (page != null) {\n    data.p = page;\n  }\n  if (query) {\n    data.q = query;\n  }\n  return api.searchMembers(data).then(response => {\n    dispatch(\n      receiveAction(key, response.users, {\n        loading: false,\n        total: response.paging.total,\n        pageIndex: response.paging.pageIndex,\n        query: query || null\n      })\n    );\n  }, onMembersFail(key, dispatch));\n};\n\nexport const fetchOrganizationMembers = (key /*: string */, query /*: ?string */) => (\n  dispatch /*: Function */\n) => fetchMembers(dispatch, membersActions.receiveMembers, key, query);\n\nexport const fetchMoreOrganizationMembers = (key /*: string */, query /*: ?string */) => (\n  dispatch /*: Function */,\n  getState /*: Function */\n) =>\n  fetchMembers(\n    dispatch,\n    membersActions.receiveMoreMembers,\n    key,\n    query,\n    getOrganizationMembersState(getState(), key).pageIndex + 1\n  );\n\nexport const addOrganizationMember = (key /*: string */, member /*: Member */) => (\n  dispatch /*: Function */\n) => {\n  return api\n    .addMember({ login: member.login, organization: key })\n    .then(user => dispatch(membersActions.addMember(key, user)), onFail(dispatch));\n};\n\nexport const removeOrganizationMember = (key /*: string */, member /*: Member */) => (\n  dispatch /*: Function */\n) => {\n  dispatch(membersActions.removeMember(key, member));\n  return api.removeMember({ login: member.login, organization: key }).catch((\n    error /*: Object */\n  ) => {\n    onFail(dispatch)(error);\n    dispatch(membersActions.addMember(key, member));\n  });\n};\n\nexport const updateOrganizationMemberGroups = (\n  organization /*: Organization */,\n  member /*: Member */,\n  add /*: Array<string> */,\n  remove /*: Array<string> */\n) => (dispatch /*: Function */) => {\n  dispatch(\n    receiveUser({\n      ...member,\n      groupCount: (member.groupCount || 0) + add.length - remove.length\n    })\n  );\n  const promises = [\n    ...add.map(name =>\n      addUserToGroup({ name, login: member.login, organization: organization.key })\n    ),\n    ...remove.map(name =>\n      removeUserFromGroup({ name, login: member.login, organization: organization.key })\n    )\n  ];\n  return Promise.all(promises).catch(error => {\n    dispatch(receiveUser(member));\n    onFail(dispatch)(error);\n  });\n};\n"],"sourceRoot":""}